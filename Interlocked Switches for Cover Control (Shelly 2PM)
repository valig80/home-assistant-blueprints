blueprint:
  name: Interlocked Switches for Cover Control (Shelly 2PM)
  description: >
    Use two toggle switches (e.g. from Zigbee wall switch) to open/close a cover controlled by a Shelly 2PM.
    Ensures only one switch is active at a time (interlock), triggers open/close action, and auto-turns off each switch after delay.
  domain: automation
  input:
    switch_open:
      name: Switch - Open
      selector:
        entity:
          domain: switch
    switch_close:
      name: Switch - Close
      selector:
        entity:
          domain: switch
    cover_target:
      name: Cover Entity
      selector:
        entity:
          domain: cover
    off_delay:
      name: Auto-Off Delay
      description: Time to wait before turning the triggering switch OFF (and optionally stopping the cover)
      default: 20
      selector:
        number:
          min: 1
          max: 120
          unit_of_measurement: seconds
          mode: slider
    stop_cover:
      name: Stop cover after delay
      description: If enabled, sends stop command to the cover after the delay.
      default: false
      selector:
        boolean:

mode: parallel

trigger:
  - platform: state
    entity_id: !input switch_open
    to: "on"
    id: open_switch
  - platform: state
    entity_id: !input switch_close
    to: "on"
    id: close_switch

action:
  - choose:
      - conditions:
          - condition: trigger
            id: open_switch
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input switch_close
          - service: cover.open_cover
            target:
              entity_id: !input cover_target
          - delay:
              seconds: !input off_delay
          - service: switch.turn_off
            target:
              entity_id: !input switch_open
          - if:
              - condition: template
                value_template: "{{ iif(input_boolean.stop_cover, true, false) }}"
            then:
              - service: cover.stop_cover
                target:
                  entity_id: !input cover_target

      - conditions:
          - condition: trigger
            id: close_switch
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input switch_open
          - service: cover.close_cover
            target:
              entity_id: !input cover_target
          - delay:
              seconds: !input off_delay
          - service: switch.turn_off
            target:
              entity_id: !input switch_close
          - if:
              - condition: template
                value_template: "{{ iif(input_boolean.stop_cover, true, false) }}"
            then:
              - service: cover.stop_cover
                target:
                  entity_id: !input cover_target
